{
  "openapi": "3.0.0",
  "info": {
    "title": "OCTO's baby-foot API",
    "description": "Lorem ipsum dolor sit amet",
    "termsOfService": "http://lorem-ipsum.sit",
    "contact": {
      "name": "Andrea GUEUGNAUT",
      "url": "https://falinor.com/contact",
      "email": "gue@octo.com"
    },
    "license": {
      "name": "Apache 2.0 ??",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "0.0.0"
  },
  "servers": [
    {
      "url": "https://dev.falinor.com/{apiVersion}",
      "description": "The development API server",
      "variables": {
        "apiVersion": {
          "default": "v1",
          "description": "The API version. Atmost two API versions should be live at\nthe same time.\n"
        }
      }
    }
  ],
  "components": {
    "headers": {
      "Accept": {
        "description": "The content type wanted for the reponse",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "application/json"
          ]
        }
      },
      "Content-Type": {
        "description": "The request content type",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "application/json"
          ]
        }
      }
    },
    "parameters": {
      "skip": {
        "name": "skip",
        "in": "query",
        "description": "Number of items to skip",
        "type": "integer",
        "format": "int32"
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "description": "Max items to return",
        "type": "integer",
        "format": "int32"
      }
    },
    "schemas": {
      "Player": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "rank": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "Players": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Player"
        }
      }
    }
  },
  "paths": {
    "/players": {
      "summary": "Manipulate player entities",
      "get": {
        "summary": "Find all players",
        "description": "TODO",
        "operationId": "findPlayers",
        "tags": [
          "Players"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Players"
                }
              }
            }
          }
        }
      }
    },
    "/players/{id}": {
      "summary": "Manipulate a player entity",
      "get": {
        "summary": "Find a player by ID",
        "description": "The ID can be a trigram or quadrigram e.g. 'abc'.\n",
        "operationId": "findPlayerById",
        "tags": [
          "Players"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The user ID",
            "schema": {
              "type": "string",
              "pattern": "^[a-z]{3,4}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  }
}
