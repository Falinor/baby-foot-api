{
  "swagger": "2.0",
  "info": {
    "version": "0.0.1",
    "title": "OCTO's baby-foot API"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/matches": {
      "get": {
        "summary": "Find matches",
        "description": "A detailed description of the operation using GitHub flavoured markdown\n",
        "operationId": "findMatches",
        "tags": [
          "Matches"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/matches/{id}": {
      "get": {
        "summary": "Get a match by ID",
        "description": "Description\n",
        "operationId": "getMatch",
        "tags": [
          "Matches"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/matches/{id}/teams": {
      "get": {
        "summary": "Find the teams that played this match",
        "description": "Test\n",
        "operationId": "findTeams",
        "tags": [
          "Match edges"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/teams": {
      "get": {
        "summary": "Find teams",
        "description": "Find teams with pagination. One can pass query parameters in order to filter, sort or limit the entities.\n",
        "operationId": "findTeams",
        "tags": [
          "Teams"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/teams/{id}": {
      "get": {
        "summary": "Get a team by ID",
        "description": "Description\n",
        "operationId": "findTeamByID",
        "tags": [
          "Teams"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/teams/{id}/matches": {
      "get": {
        "summary": "Find matches associated with a team.",
        "description": "Find all the matches a team has competed.\n",
        "operationId": "findMatchesFromTeam",
        "tags": [
          "Team edges"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "post": {
        "summary": "Create a match associated with a team.",
        "description": "Create a\n"
      }
    },
    "/teams/{id}/players": {
      "get": {
        "summary": "Find the members of a team.",
        "description": "Find the players associated with a team.\n",
        "operationId": "findPlayersByTeam",
        "tags": [
          "Team edges"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/players": {
      "get": {
        "summary": "Find players",
        "description": "Find players.\n",
        "operationId": "findPlayers",
        "tags": [
          "Player edges"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/players/{id}": {
      "get": {
        "summary": "Get a player by trigram",
        "description": "Get a player by trigram.\n",
        "operationId": "findPlayerByTrigram",
        "tags": [
          "Players"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/players/{id}/teams": {
      "get": {
        "summary": "Find the teams associated with a player.",
        "description": "Retrieves the teams of which the given player is a member.\n",
        "operationId": "findTeamsFromPlayer",
        "tags": [
          "Player edges"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "post": {
        "summay": "Create a team.",
        "description": "A team is composed of two players. This endpoint creates a team in which a player can play. A team cannot exist without players, that is why it must be saved using a player, it cannot be standalone.\n",
        "operationId": "createTeamFromPlayer",
        "tags": [
          "Player edges"
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/players/{id}/matches": {
      "get": {
        "summary": "Find matches associated with a player.",
        "description": "Find all the matches a player has competed.\n",
        "operationId": "findPlayerMatches",
        "tags": [
          "Player edges"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Match": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "_key": {
          "type": "string"
        },
        "red": {
          "type": "object",
          "properties": {
            "points": {
              "type": "number",
              "minimum": 0,
              "maximum": 42,
              "example": 10
            }
          },
          "required": [
            "points"
          ]
        },
        "blue": {
          "type": "object",
          "properties": {
            "points": {
              "type": "number",
              "minimum": 0,
              "maximum": 42,
              "example": 6
            }
          },
          "required": [
            "points"
          ]
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "red",
        "blue",
        "createdAt"
      ]
    },
    "Team": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "_key": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "createdAt"
      ]
    },
    "Player": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "_key": {
          "type": "string"
        },
        "trigram": {
          "type": "string",
          "pattern": "^[A-Z]{3}$"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "trigram",
        "createdAt"
      ]
    }
  },
  "parameters": {
    "skipParam": {
      "name": "skip",
      "in": "query",
      "description": "Number of items to skip",
      "type": "integer",
      "format": "int32"
    },
    "limitParam": {
      "name": "limit",
      "in": "query",
      "description": "Max items to return",
      "type": "integer",
      "format": "int32"
    }
  },
  "responses": {
    "401": {
      "description": "Unauthorized"
    },
    "403": {
      "description": "Forbidden"
    },
    "404": {
      "description": "Not found"
    },
    "500": {
      "description": "Server error"
    }
  }
}
